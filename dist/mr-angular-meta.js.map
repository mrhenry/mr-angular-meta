{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "lib/index.js",
    "lib/meta-directive.js",
    "lib/meta-service.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACn
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _metaService = require('./meta-service');\n\nvar _metaService2 = _interopRequireDefault(_metaService);\n\nvar _metaDirective = require('./meta-directive');\n\nvar _metaDirective2 = _interopRequireDefault(_metaDirective);\n\nangular.module('mr-angular-meta', []).service('MetaService', _metaService2['default']).directive('MetaDirective', _metaDirective2['default']);\n//# sourceMappingURL=index.js.map",
    "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction MetaDirective($compile) {\n  return {\n    restrict: 'A',\n    link: function link($scope, $element) {\n      var elems = $compile(TMPL)($scope);\n      $element.prepend(elems);\n    }\n  };\n};\n\nvar TMPL = '\\n<title ng-bind-template=\"{{ meta.title }}\"></title>\\n<meta name=\"description\" content=\"{{ meta.description }}\" />\\n<meta name=\"prerender-status-code\" content=\"{{ meta.status }}\">\\n<link rel=\"canonical\" ng-href=\"{{ meta.url }}\" />\\n<meta property=\"og:site_name\"\\n  ng-if=\"meta.siteName\"\\n  content=\"{{ meta.siteName }}\" />\\n<meta property=\"og:url\"\\n  ng-if=\"meta.url\"\\n  content=\"{{ meta.url }}\" />\\n<meta property=\"og:title\"\\n  ng-if=\"meta.title\"\\n  content=\"{{ meta.title }}\" />\\n<meta property=\"og:type\"\\n  ng-if=\"meta.type\"\\n  content=\"{{ meta.type }}\" />\\n<meta property=\"og:description\"\\n  ng-if=\"meta.description\"\\n  content=\"{{ meta.description }}\" />\\n<meta property=\"og:image\"\\n  ng-if=\"meta.image\"\\n  content=\"{{ meta.image }}\" />\\n<meta name=\"twitter:card\"\\n  ng-if=\"meta.twitterHandle\"\\n  content=\"summary_large_image\">\\n<meta name=\"twitter:site\"\\n  ng-if=\"meta.twitterHandle\"\\n  content=\"{{ meta.twitterHandle }}\">\\n<meta name=\"twitter:title\"\\n  ng-if=\"meta.title\"\\n  content=\"{{ meta.title }}\">\\n<meta name=\"twitter:description\"\\n  ng-if=\"meta.description\"\\n  content=\"{{ meta.description }}\">\\n<meta name=\"twitter:image\"\\n  ng-if=\"meta.image\"\\n  content=\"{{ meta.image }}\">\\n';\n\nexports['default'] = ['$compile', MetaDirective];\nmodule.exports = exports['default'];\n//# sourceMappingURL=meta-directive.js.map",
    "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar MetaService = (function () {\n  function MetaService($rootScope, $location) {\n    _classCallCheck(this, MetaService);\n\n    this.$rootScope = $rootScope;\n    this.$location = $location;\n\n    this.stack = [];\n    this.top = null;\n  }\n\n  _createClass(MetaService, [{\n    key: 'push',\n    value: function push() {\n      var data = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var top = this.top;\n      var loc = this.$location;\n\n      if (!data.url) {\n        data.url = loc.absUrl();\n      }\n\n      if (top) {\n        if (!data.siteName) {\n          data.siteName = top.siteName;\n        }\n\n        if (!data.title) {\n          data.title = top.title;\n        }\n\n        if (!data.image) {\n          data.image = top.image;\n        }\n\n        if (!data.description) {\n          data.description = top.description;\n        }\n\n        if (!data.type) {\n          data.type = top.type;\n        }\n\n        if (!data.twitterHandle) {\n          data.twitterHandle = top.twitterHandle;\n        }\n\n        if (!data.status) {\n          data.status = top.status;\n        }\n      }\n\n      if (!data.type) {\n        data.type = 'website';\n      }\n\n      if (!data.status) {\n        data.status = 200;\n      }\n\n      data.image = toAbsUrl(data.image);\n\n      data.url = toAbsUrl(data.url);\n\n      this.stack.push(data);\n      this.top = data;\n      this.$rootScope.meta = this.top;\n    }\n  }, {\n    key: 'pop',\n    value: function pop() {\n      if (this.stack.length > 1) {\n        this.stack.pop();\n      }\n\n      this.top = this.stack[this.stack.length - 1];\n      this.$rootScope.meta = this.top;\n    }\n  }]);\n\n  return MetaService;\n})();\n\nfunction toAbsUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  if (url.indexOf('http') === 0) {\n    return url;\n  }\n\n  if (url.indexOf('//') === 0) {\n    return '' + window.location.protocol + url;\n  }\n\n  if (url.indexOf('/') === 0) {\n    return window.location.protocol + '//' + window.location.host + url;\n  }\n\n  return window.location.protocol + '//' + window.location.host + '/' + url;\n}\n\nexports['default'] = ['$rootScope', '$location', MetaService];\nmodule.exports = exports['default'];\n//# sourceMappingURL=meta-service.js.map"
  ]
}